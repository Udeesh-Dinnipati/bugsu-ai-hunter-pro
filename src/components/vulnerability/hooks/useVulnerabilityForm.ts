
import { useState, useEffect } from "react";
import { Vulnerability } from "../../UrlScanner";

export function useVulnerabilityForm(
  isOpen: boolean,
  vulnerability: Vulnerability | null
) {
  const [step, setStep] = useState(0);
  const [asset, setAsset] = useState("");
  const [weakness, setWeakness] = useState("");
  const [severity, setSeverity] = useState("");
  const [pocTitle, setPocTitle] = useState("");
  const [pocDesc, setPocDesc] = useState("");
  const [pocImpact, setPocImpact] = useState("");
  const [payload, setPayload] = useState("");

  // Reset form and populate defaults when modal opens
  useEffect(() => {
    if (isOpen && vulnerability) {
      setAsset(""); setWeakness(""); setSeverity("");
      setPocTitle(""); setPocDesc(""); setPocImpact(""); setPayload("");
      setWeakness(vulnerability.name || "");
      setSeverity(vulnerability.severity || "");
    }
    if (!isOpen) setStep(0);
  }, [isOpen, vulnerability]);

  // Determine if user can proceed to next step
  const canContinue =
    (step === 0 && asset) ||
    (step === 1 && weakness) ||
    (step === 2 && severity) ||
    (step === 3 && pocTitle && pocDesc && pocImpact) ||
    (step === 4 && payload) ||
    step === 5;

  // Go to next step if possible
  const nextStep = () => {
    if (canContinue) setStep(s => s + 1);
  };

  // Go to previous step
  const prevStep = () => {
    setStep(s => s - 1);
  };

  // Prepare final submission data
  const getSubmissionData = () => {
    return {
      ...vulnerability,
      asset,
      weakness,
      severity,
      poc: { title: pocTitle, desc: pocDesc, impact: pocImpact },
      payload,
    };
  };

  return {
    step,
    asset, setAsset,
    weakness, setWeakness,
    severity, setSeverity,
    pocTitle, setPocTitle,
    pocDesc, setPocDesc,
    pocImpact, setPocImpact,
    payload, setPayload,
    canContinue,
    nextStep,
    prevStep,
    getSubmissionData
  };
}
