
import { ScanResult } from "../UrlScanner";

export function generateReportContent(result: ScanResult): string {
  let content = `VULNERABILITY REPORT\n`;
  content += `==================\n\n`;
  content += `URL: ${result.url}\n`;
  content += `Scan Date: ${new Date(result.scanDate).toLocaleString()}\n`;
  content += `Scan Duration: ${result.scanDuration} seconds\n`;
  content += `Total Vulnerabilities: ${result.vulnerabilities.length}\n\n`;
  
  if (result.vulnerabilities.length === 0) {
    content += `No vulnerabilities were detected.\n`;
  } else {
    content += `DETECTED VULNERABILITIES\n`;
    content += `========================\n\n`;
    
    result.vulnerabilities.forEach((vuln, index) => {
      content += `[${index + 1}] ${vuln.name}\n`;
      content += `Severity: ${vuln.severity.toUpperCase()}\n`;
      content += `CWE ID: ${vuln.cweId}\n`;
      content += `Affected URL: ${vuln.affectedUrl}\n`;
      content += `Description: ${vuln.description}\n\n`;
      
      content += `Steps to Reproduce:\n`;
      vuln.stepsToReproduce.forEach((step, stepIndex) => {
        content += `${stepIndex + 1}. ${step}\n`;
      });
      
      content += `\nExploit Suggestion: ${vuln.exploitSuggestion}\n`;
      content += `Legal Status: ${vuln.isLegal ? 'Safe to test' : 'Caution required'}\n`;
      if (!vuln.isLegal && vuln.legalNotes) {
        content += `Legal Notes: ${vuln.legalNotes}\n`;
      }
      content += `\n${'-'.repeat(50)}\n\n`;
    });
  }
  
  content += `Report generated by BugSU - The AI-Powered Bug Hunter\n`;
  content += `Â© ${new Date().getFullYear()} BugSU. Ethical Bug Hunting Platform.`;
  
  return content;
}
